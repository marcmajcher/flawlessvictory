
/*# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"file":"kube.css","sources":["kube.scss"],"sourcesContent":["// BREAKPOINTS\n// ---------------------------------------------------------------------------\n$sm: 768px !default;\n$md: 1024px !default;\n$lg: 1200px !default;\n// WIDTH\n// ---------------------------------------------------------------------------\n$w-small: 480px !default;\n$w-medium: 600px !default;\n$w-big: 740px !default;\n$w-large: 840px !default;\n// Z-INDEX\n// ---------------------------------------------------------------------------\n$z-over-content: 100 !default;\n$z-over-control: 200 !default;\n$z-over-page: 300 !default;\n$z-over-screen: 400 !default;\n$z-over-all: 500 !default;\n// GRID\n// ---------------------------------------------------------------------------\n$grid-columns: 12 !default;\n$grid-gutter: 2% !default;\n// FONT FAMILY\n// ---------------------------------------------------------------------------\n$text-font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif !default;\n$monospace-font-family: Consolas, Monaco, 'Courier New', monospace !default;\n$headings-font-family: $text-font-family !default;\n$buttons-font-family: $text-font-family !default;\n$input-font-family: $text-font-family !default;\n// COLORS\n// ---------------------------------------------------------------------------\n// Text\n$color-text: #313439 !default;\n$color-headings: #0d0d0e !default;\n// Links\n$color-link: #3794de !default;\n$color-link-hover: #f03c69 !default;\n// Button\n$color-button-primary: #1c86f2 !default;\n$color-button-primary-text: #fff !default;\n$color-button-secondary: #313439 !default;\n$color-button-secondary-text: #fff !default;\n// States\n$color-error: #f03c69 !default;\n$color-success: #35beb1 !default;\n$color-warning: #f7ba45 !default;\n$color-focus: #1c86f2 !default;\n// Extra\n$color-inverted: #fff !default;\n$color-highlight: #edf2ff !default; // color-focus 15% opacity\n// Grayscale\n$color-black: #0d0d0e !default;\n$color-darkgray: #313439 !default;\n$color-midgray: #676b72 !default;\n$color-gray: #bdbdbd !default;\n$color-lightgray: #d4d4d4 !default;\n$color-silver: #e0e1e1 !default;\n$color-aluminum: #f8f8f8 !default;\n// TEXT\n// ---------------------------------------------------------------------------\n// Font Size\n$font-size: 16px !default;\n$font-size-smaller: $font-size - 4px !default;\n$font-size-small: $font-size - 2px !default;\n$font-size-big: $font-size + 2px !default;\n$font-size-large: $font-size + 4px !default;\n// Baseline\n$base-line: 24px !default;\n$base-line-smaller: 20px !default;\n$base-line-small: 20px !default;\n$base-line-big: 28px !default;\n$base-line-large: 32px !default;\n// Margin\n$text-margin-bottom: $font-size !default;\n// HEADINGS\n// ---------------------------------------------------------------------------\n// Font Size\n// By default: 60, 48, 36, 24, 21, 18, 16\n$heading-font-size-title: 60px !default;\n$heading-font-size-1: 48px !default;\n$heading-font-size-2: 36px !default;\n$heading-font-size-3: 24px !default;\n$heading-font-size-4: 21px !default;\n$heading-font-size-5: 18px !default;\n$heading-font-size-6: 16px !default;\n// Baseline\n$heading-base-line-title: 64px !default;\n$heading-base-line-1: 52px !default;\n$heading-base-line-2: 40px !default;\n$heading-base-line-3: 32px !default;\n$heading-base-line-4: 32px !default;\n$heading-base-line-5: 28px !default;\n$heading-base-line-6: 24px !default;\n// Margin\n$heading-margin-bottom: $font-size !default;\n// TABLES\n// ---------------------------------------------------------------------------\n// Font Size\n$table-font-size: $font-size - 1px !default;\n// Baseline\n$table-base-line: 24px !default;\n// Padding\n$table-padding-tb: 1rem !default;\n$table-padding-rl: 1rem !default;\n// Border\n$table-border: 1px solid rgba(0, 0, 0, .05) !default;\n// Striped\n$table-background-striped: $color-aluminum !default;\n// BUTTONS\n// ---------------------------------------------------------------------------\n// Font Size\n$button-font-size: 15px !default;\n$button-font-size-smaller: $button-font-size - 4px !default;\n$button-font-size-small: $button-font-size - 2px !default;\n$button-font-size-big: $button-font-size + 2px !default;\n$button-font-size-large: $button-font-size + 4px !default;\n// Baseline\n$button-base-line: 20px !default;\n// Height\n$button-height: 40px !default;\n$button-height-small: 36px !default;\n$button-height-big: 48px !default;\n$button-height-large: 56px !default;\n// Padding\n$button-padding-tb: 8px !default;\n$button-padding-rl: 20px !default;\n$button-padding-small-tb: 6px !default;\n$button-padding-small-rl: 20px !default;\n$button-padding-big-tb: 13px !default;\n$button-padding-big-rl: 24px !default;\n$button-padding-large-tb: 20px !default;\n$button-padding-large-rl: 36px !default;\n// Weight\n$button-font-weight: 500 !default;\n// Radius\n$button-border-radius: 3px !default;\n// INPUTS\n// ---------------------------------------------------------------------------\n// Font Size\n$input-font-size: 15px !default;\n$input-font-size-smaller: $input-font-size - 4px !default;\n$input-font-size-small: $input-font-size - 2px !default;\n$input-font-size-big: $input-font-size + 2px !default;\n$input-font-size-large: $input-font-size + 4px !default;\n// Baseline\n$textarea-base-line: $base-line !default;\n// Height\n$input-height: 40px !default;\n$input-height-small: 36px !default;\n$input-height-big: 48px !default;\n$input-height-large: 56px !default;\n// Padding\n$input-padding-rl: 12px !default;\n$input-padding-small-rl: 12px !default;\n$input-padding-big-rl: 12px !default;\n$input-padding-large-rl: 12px !default;\n$input-textarea-padding-tb: 8px !default;\n// States\n$input-border-width: 1px !default;\n$input-border-color: $color-lightgray !default;\n$input-background-color: #fff !default;\n$input-box-shadow: none !default;\n$input-focus-background-color: #fff !default;\n$input-focus-border-color: $color-focus !default;\n$input-focus-box-shadow: 0 0 1px $color-focus inset !default;\n$input-error-background-color: $color-error !default;\n$input-error-border-color: $color-error !default;\n$input-error-focus-box-shadow: 0 0 1px $color-error inset !default;\n$input-success-background-color: $color-success !default;\n$input-success-border-color: $color-success !default;\n$input-success-focus-box-shadow: 0 0 1px $color-success inset !default;\n$input-disabled-opacity: 0.6;\n$input-disabled-color: rgba(0, 0, 0, .5);\n// Radius\n$input-border-radius: 3px !default;\n// OVERLAY\n// ---------------------------------------------------------------------------\n$overlay-background-color: rgba(#fff, .95);\n@mixin breakpoint($min: 0, $max: 0) {\n  $type: type-of($min);\n  @if $type == string {\n    @if $min == sm {\n      @media (max-width: $sm) {\n        @content;\n      }\n    } @else \n    if $min == md {\n      @media (min-width: $sm) and (max-width: $md) {\n        @content;\n      }\n    } @else \n    if $min == lg {\n      @media (min-width: $lg) {\n        @content;\n      }\n    }\n  } @else \n  if $type == number {\n    $query: \"all\" !default;\n    @if $min != 0 and $max != 0 {\n      $query: \"(min-width: #{$min}) and (max-width: #{$max})\";\n    } @else \n    if $min != 0 and $max == 0 {\n      $query: \"(min-width: #{$min})\";\n    } @else \n    if $min == 0 and $max != 0 {\n      $query: \"(max-width: #{$max})\";\n    }\n    @media #{$query} {\n      @content;\n    }\n  }\n}\n// Text\n@mixin text-font($font) {\n  body {\n    font-family: #{$font};\n  }\n}\n// Headings\n@mixin headings-font($font) {\n  .h1,\n  .h2,\n  .h3,\n  .h4,\n  .h5,\n  .h6,\n  h1,\n  h1.title,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: #{$font};\n  }\n}\n// Buttons\n@mixin buttons-font($font) {\n  .button,\n  button {\n    font-family: #{$font};\n  }\n}\n// Inputs\n@mixin inputs-font($font) {\n  input,\n  select,\n  textarea {\n    font-family: #{$font};\n  }\n}\n// display\n@mixin flex {\n  display: flex;\n}\n// basis\n@mixin flex-basis($width) {\n  flex-basis: $width;\n}\n// items wrap\n@mixin flex-items-wrap {\n  flex-wrap: wrap;\n}\n// items nowrap\n@mixin flex-items-nowrap {\n  flex-wrap: nowrap;\n}\n// items row\n@mixin flex-items-row {\n  flex-direction: row;\n}\n// items columns\n@mixin flex-items-column {\n  flex-direction: column;\n}\n// items left\n@mixin flex-items-left {\n  justify-content: flex-start;\n}\n// items right\n@mixin flex-items-right {\n  justify-content: flex-end;\n}\n// items center\n@mixin flex-items-center {\n  justify-content: center;\n}\n// items between\n@mixin flex-items-space-between {\n  justify-content: space-between;\n}\n// items around\n@mixin flex-items-space-around {\n  justify-content: space-around;\n}\n// items vertical top\n@mixin flex-items-top {\n  align-items: flex-start;\n}\n// items vertical middle\n@mixin flex-items-middle {\n  align-items: center;\n}\n// items vertical bottom\n@mixin flex-items-bottom {\n  align-items: flex-end;\n}\n// item grow\n@mixin flex-item-grow($grow: 0) {\n  flex-grow: $grow;\n}\n// item auto\n@mixin flex-item-auto {\n  flex: auto;\n}\n// item one\n@mixin flex-item-one {\n  flex: 1;\n}\n// item shrink\n@mixin flex-item-shrink($num: 0) {\n  flex-shrink: $num;\n}\n// item width\n@mixin flex-item-width($width) {\n  flex: 0 0 $width;\n  @include breakpoint(sm) {\n    flex: 0 0 100% !important;\n  }\n}\n// Make Row\n@mixin grid-row {\n  @include flex;\n  @include flex-items-row;\n  @include flex-items-wrap;\n  @include breakpoint(sm) {\n    @include flex-items-column;\n    @include flex-items-nowrap;\n  }\n}\n// Generate Columns\n@mixin generate-grid-columns {\n  @for $i from 1 through $grid-columns {\n    .col-#{$i} {\n      width: 100% / $grid-columns * $i;\n    }\n\n    .offset-#{$i} {\n      $width: 100% / $grid-columns * $i;\n      margin-left: $width;\n    }\n  }\n\n  .gutters {\n    @for $i from 1 through $grid-columns {\n      & > .col-#{$i} {\n        $width: 100% / $grid-columns * $i;\n        width: calc(#{$width} - #{$grid-gutter});\n      }\n\n      & > .offset-#{$i} {\n        $width: 100% / $grid-columns * $i;\n        margin-left: calc(#{$width} + #{$grid-gutter}) !important;\n      }\n    }\n  }\n}\n// Grid Media Columns\n@mixin grid-media-columns($num) {\n  -webkit-column-count: $num;\n  -moz-column-count: $num;\n  column-count: $num;\n  -webkit-column-gap: $grid-gutter;\n  -moz-column-gap: $grid-gutter;\n  column-gap: $grid-gutter;\n\n  & > div {\n    display: inline-block;\n    width: 100%;\n  }\n  @include breakpoint(sm) {\n    -webkit-column-count: 1;\n    -moz-column-count: 1;\n    column-count: 1;\n  }\n}\n// Clearfix\n@mixin clearfix {\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n// Transition\n@mixin transition($transition: all linear 0.2s) {\n  -moz-transition: $transition;\n  transition: $transition;\n}\n// transform\n@mixin transform($transforms) {\n  -moz-transform: $transforms;\n  -ms-transform: $transforms;\n  -webkit-transform: $transforms;\n  transform: $transforms;\n}\n// blur\n@mixin blur($radius) {\n  -webkit-filter: blur($radius);\n  -moz-filter: blur($radius);\n  -ms-filter: blur($radius);\n  filter: blur($radius);\n}\n// striped\n@mixin striped($color: rgba(255, 255, 255, .2), $angle: 45deg) {\n  background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\n  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\n}\n// animation\n@mixin animation($animation) {\n  -webkit-animation: $animation;\n  -moz-animation: $animation;\n  animation: $animation;\n}\n// Retina Images\n@mixin retina-background-image($file, $type, $width: auto, $height: auto) {\n  background-repeat: no-repeat;\n  background-image: url($file + '.' + $type);\n  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {\n    background-image: url($file + '-2x.' + $type);\n    background-size: $width $height;\n  }\n}\n@mixin button($color-text, $color-back) {\n  color: $color-text;\n  background-color: $color-back;\n\n  &:hover {\n    color: $color-text;\n    background-color: lighten($color-back, 20%);\n  }\n\n  &.disabled,\n  &:disabled {\n    color: rgba($color-text, .7);\n    background-color: rgba($color-back, .7);\n  }\n\n  &.outline {\n    background: none;\n    color: $color-back;\n    border-color: $color-back;\n\n    &:hover {\n      color: rgba($color-back, .6);\n      border-color: rgba($color-back, .5);\n    }\n\n    &.disabled,\n    &:disabled {\n      background: none;\n      color: rgba($color-back, .7);\n      border-color: rgba($color-back, .5);\n    }\n  }\n}\n// vertical\n@mixin gradient-vertical($start: #555, $end: #333) {\n  background-color: $start;\n  background-image: linear-gradient(to bottom, $start 0%, $end 100%);\n}\n// vertical to opacity\n@mixin gradient-vertical-to-opacity($color, $opacity: 0) {\n  $rgba: rgba(red($color), green($color), blue($color), $opacity);\n  background: linear-gradient(to bottom, $color 0%, $rgba 100%);\n}\n// horizontal\n@mixin gradient-horizontal($start: #555, $end: #333) {\n  background-color: $start;\n  background: linear-gradient(to right, $start 0%, $end 100%);\n}\n// horizontal to opacity\n@mixin gradient-horizontal-to-opacity($color: #555, $opacity: 0) {\n  $rgba: rgba(red($color), green($color), blue($color), $opacity);\n  background: linear-gradient(to right, $color 0%, $rgba 100%);\n}\n// radial\n@mixin gradient-radial($inner: #555, $outer: #333) {\n  background-image: radial-gradient(circle, $inner, $outer);\n}\n@mixin label($text, $back) {\n  background: $back;\n  color: $text;\n\n  &.outline,\n  &.tag {\n    background: none;\n    border-color: $back;\n    color: $back;\n  }\n}"],"names":[],"mappings":""} */
